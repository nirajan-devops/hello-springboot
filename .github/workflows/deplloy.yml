name: Build & Deploy Spring Boot via Docker

on:
  push:
    branches: [main]      # run on every push to main
  workflow_dispatch:      # plus a manual trigger button

jobs:
# ───────────────────────────────────────────
# 1) BUILD JAR + DOCKER IMAGE ON RUNNER
# ───────────────────────────────────────────
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ── Maven build ───────────────────────
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build Spring Boot JAR
        run: |
          chmod +x ./mvnw                  # just in case
          ./mvnw clean package --no-transfer-progress

      # ── Docker image ──────────────────────
      - name: Build Docker image
        run: docker build -t hello-springboot .

      - name: Save Docker image to tar
        run: docker save hello-springboot -o hello-springboot.tar

      # Write SSH key to file (avoids multiline issues)
      - name: Write SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa

      # ── Copy tarball to EC2 ───────────────
      - name: Copy image to EC2 via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}       # ubuntu | ec2-user
          key_path: id_rsa
          source:   "hello-springboot.tar"
          target:   "/home/${{ secrets.USERNAME }}/"

      # ── SSH & deploy on EC2 ────────────────
      - name: Install Docker & run container on EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host:     ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key_path: id_rsa
          script: |
            set -e

            # 1) Install Docker if missing
            if ! command -v docker &>/dev/null; then
              echo "Installing Docker…"
              if [ -f /etc/debian_version ]; then
                sudo apt-get update -y
                sudo apt-get install -y docker.io
              else
                sudo yum update -y
                sudo amazon-linux-extras install docker -y
              fi
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            fi

            # 2) Load image & (re)run container
            cd /home/${{ secrets.USERNAME }}
            sudo docker load -i hello-springboot.tar

            sudo docker stop hello-springboot || true
            sudo docker rm   hello-springboot || true

            sudo docker run -d \
              --name hello-springboot \
              -p 8080:8080 \
              hello-springboot

            echo "✅ Spring Boot app deployed on port 8080"
