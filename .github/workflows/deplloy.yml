name: Build & Deploy Spring Boot via Docker

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Build Spring Boot JAR
        run: |
          chmod +x ./mvnw
          ./mvnw clean package --no-transfer-progress

      - name: Build Docker image
        run: docker build -t hello-springboot .

      - name: Save Docker image to tar
        run: docker save hello-springboot -o hello-springboot.tar

      # ──── FIXED SSH KEY HANDLING ────
      - name: Setup SSH key and known_hosts
        run: |
          # Create .ssh directory with proper permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Write private key with proper newline formatting
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Add server to known_hosts
          ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts
          
          # Verify key formatting
          echo "SSH key content:"
          head -n 3 ~/.ssh/id_rsa
          echo "Known hosts:"
          cat ~/.ssh/known_hosts

      # ──── SCP TRANSFER ────
      - name: Copy image to EC2 via SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use key directly
          source: "hello-springboot.tar"
          target: "/home/${{ secrets.USERNAME }}/"
          strip_components: true
          overwrite: true

      # ──── DEPLOYMENT ────
      - name: Install Docker & run container on EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use key directly
          script: |
            set -e
            echo "Current user: $(whoami)"
            echo "Home directory: $HOME"
            
            # 1) Install Docker if missing
            if ! command -v docker &>/dev/null; then
              echo "Installing Docker…"
              if [ -f /etc/debian_version ]; then
                sudo apt-get update -y
                sudo apt-get install -y docker.io
              else
                sudo yum update -y
                sudo amazon-linux-extras install docker -y
              fi
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
              # Apply group changes without logout
              exec sg docker -c "$0 $*"
            fi

            # 2) Verify file transfer
            cd /home/${{ secrets.USERNAME }}
            echo "Files in directory:"
            ls -lh
            echo "File size: $(du -h hello-springboot.tar)"
            
            # 3) Load image & (re)run container
            sudo docker load -i hello-springboot.tar
            sudo docker images | grep hello-springboot
            
            sudo docker stop hello-springboot || true
            sudo docker rm hello-springboot || true

            sudo docker run -d \
              --name hello-springboot \
              -p 8080:8080 \
              hello-springboot

            # 4) Verify deployment
            echo "✅ Spring Boot app deployed on port 8080"
            sudo docker ps -a | grep hello-springboot
            echo "Container logs:"
            sudo docker logs hello-springboot --tail 20